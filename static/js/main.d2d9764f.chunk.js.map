{"version":3,"sources":["components/Header/LoginRegisterBtn.js","actions/errorActions.js","actions/types.js","actions/authActions.js","components/Header/Logout.component.jsx","components/Header/Header.js","components/LikeComment.js","components/PostTile.js","pages/Home.js","components/PostTileCovid.js","pages/Covid.js","pages/About.js","pages/User.js","pages/CreatePost.js","actions/postActions.js","actions/covidActions.js","pages/Login.js","pages/Register.js","reducers/postReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/covidReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js","images/logo_transparent.png"],"names":["LoginRegisterBtn","props","user","isAuthenticated","to","className","name","returnErrors","msg","status","id","type","payload","clearErrors","login","email","password","dispatch","a","config","headers","body","JSON","stringify","axios","post","response","data","tokenConfig","getState","token","auth","Logout","NavLink","onClick","this","logout","href","icon","faSignOutAlt","size","Component","connect","Header","handleToggle","currentState","state","isOpen","setState","console","log","Row","Col","src","logo","alt","height","width","class","placeholder","Navbar","light","expand","NavbarToggler","Collapse","navbar","Nav","NavItem","faViruses","LikeComment","incrementId","currentId","toString","isClicked","handleLikeClick","bind","faHeart1","faHeart","faComment","UncontrolledCollapse","toggler","faPaperPlane","PostTile","postCreated","createdAt","createdWhen","created","Date","parse","h","now","Math","trunc","postUpdated","updatedAt","updatedWhen","posts","get","then","res","map","key","_id","Card","CardTitle","owner","CardBody","title","content","Home","createPostLink","faPlusCircle","for","data-toggle","error","PostTileCovid","Covid","About","User","CreatePost","onChange","e","target","value","onChangeCheckBox","checked","handleSubmit","preventDefault","relatedToCovid","askForHelp","newCovidPost","ownerId","createCovidPost","redirectToCovid","newPost","createPost","redirectToHome","componentDidMount","history","push","onSubmit","rows","Login","prevProps","Alert","color","Register","newUser","firstName","lastName","username","confirmPassword","register","initialState","localStorage","getItem","isLoading","covidPosts","combineReducers","action","filter","stats","setItem","removeItem","covidPost","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.d2d9764f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./header.css\";\r\n\r\nexport default function LoginRegisterBtn(props) {\r\n  const { user, isAuthenticated } = props;\r\n  return (\r\n    <NavLink to={ isAuthenticated ? \"/user\": \"/login\"} className=\"nav-link\">\r\n      <span className=\"text-link\">\r\n        { isAuthenticated ? `Welcome, ${user.name}` : \"Login/Register\"}\r\n      </span>\r\n    </NavLink>\r\n  );\r\n}\r\n","import * as actions from \"./types\";\r\n\r\n// RETURN ERRORS\r\nexport const returnErrors = (msg, status, id = null) => {\r\n  return {\r\n    type: actions.GET_ERRORS,\r\n    payload: { msg, status, id },\r\n  };\r\n};\r\n\r\n// CLEAR ERRORS\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: actions.CLEAR_ERRORS,\r\n  };\r\n};\r\n","// POST TYPES\r\nexport const GET_ALL_POSTS = \"GET_ALL_POSTS\";\r\nexport const GET_POST = \"GET_POST\";\r\nexport const CREATE_POST = \"CREATE_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const POSTS_LOADING = \"POSTS_LOADING\";\r\n\r\n// COVID POSTS TYPES\r\nexport const GET_ALL_C_POSTS = \"GET_ALL_C_POSTS\";\r\nexport const GET_C_POST = \"GET_C_POST\";\r\nexport const CREATE_C_POST = \"CREATE_C_POST\";\r\nexport const DELETE_C_POST = \"DELETE_C_POST\";\r\nexport const C_POSTS_LOADING = \"C_POSTS_LOADING\";\r\n\r\n// USER TYPES\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\n\r\n// AUTH TYPES\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\n\r\n// LOGIN/REGISTER/LOGOUT TYPES\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAIL = \"LOGOUT_FAIL\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\n\r\n// ERROR TYPES\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import axios from \"axios\";\r\nimport * as actions from \"../actions/types\";\r\nimport { returnErrors } from \"./errorActions\";\r\n\r\n// Check token and load user\r\nexport const loadUser = () => async (dispatch, getState) => {\r\n  try {\r\n    // User loading\r\n    dispatch({ type: actions.USER_LOADING });\r\n\r\n    // Fetch user\r\n    const response = await axios.get(\r\n      \"/api/auth/user\",\r\n      tokenConfig(getState)\r\n    );\r\n    dispatch({\r\n      type: actions.USER_LOADED,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch(returnErrors(error.response.data, error.response.status));\r\n    dispatch({\r\n      type: actions.AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = ({\r\n  email,\r\n  firstName,\r\n  lastName,\r\n  username,\r\n  password,\r\n  confirmPassword,\r\n}) => async (dispatch) => {\r\n  try {\r\n    // Headers\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    // Request body\r\n    const body = JSON.stringify({\r\n      name: username,\r\n      email,\r\n      firstName,\r\n      lastName,\r\n      password,\r\n    });\r\n    const response = await axios.post(\r\n      \"/api/users\",\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: actions.REGISTER_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch(\r\n      returnErrors(error.response.data, error.response.status, \"REGISTER_FAIL\")\r\n    );\r\n    dispatch({\r\n      type: actions.REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = ({\r\n  email,\r\n  password,\r\n}) => async (dispatch) => {\r\n  try {\r\n    // Headers\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    // Request body\r\n    const body = JSON.stringify({\r\n      email,\r\n      password\r\n    });\r\n    const response = await axios.post(\r\n      \"/api/auth\",\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: actions.LOGIN_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch(\r\n      returnErrors(error.response.data, error.response.status, \"LOGIN_FAIL\")\r\n    );\r\n    dispatch({\r\n      type: actions.LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout User\r\nexport const logout = () => {\r\n  return {\r\n    type: actions.LOGOUT_SUCCESS\r\n  }\r\n}\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = (getState) => {\r\n  // Get token from localstorage\r\n  const token = getState().auth.token;\r\n\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // If token, add to headers\r\n  if (token) {\r\n    config.headers[\"x-auth-token\"] = token;\r\n  }\r\n\r\n  return config;\r\n};\r\n","import React, { Component, Fragment } from 'react'\r\nimport { NavLink } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './header.css'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout } from \"../../actions/authActions\"\r\n\r\nexport class Logout extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <NavLink className=\"nav-link\" onClick={this.props.logout} href=\"#\">\r\n          <FontAwesomeIcon icon={faSignOutAlt} size=\"lg\" className=\"text-link\" />\r\n        </NavLink>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLogout.propTypes = {\r\n  logout: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { logout })(Logout)\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Row, Col, Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faViruses } from '@fortawesome/free-solid-svg-icons'\r\nimport logo from \"./../../images/logo_transparent.png\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./header.css\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport LoginRegisterBtn from \"./LoginRegisterBtn\";\r\nimport Logout from \"./Logout.component\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      isOpen: false\r\n    };\r\n  }\r\n\r\n  handleToggle = () => {\r\n    const currentState = this.state.isOpen;\r\n    this.setState({isOpen: !currentState});\r\n  }\r\n\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n    console.log(isAuthenticated);\r\n    \r\n    return (\r\n      <Row className=\"header\">\r\n        <Col className=\"col-2 col-sm-2 col-md-2 order-12 order-sm-1\">\r\n          <NavLink to=\"/\" className=\"figure text-decoration-none mr-5\">\r\n            <img src={logo} alt=\"an image\" height=\"80\" width=\"80\" />\r\n          </NavLink>\r\n        </Col>\r\n        <Col className=\"col-5 col-sm-3 col-md-3 d-none d-md-inline order-2  order-sm-2\">\r\n          <form class='navbar-form rounded'>\r\n            <div class='input-group mt-3 rounded'>\r\n              <input class='form-control' type='text' name='search' placeholder='Location' />\r\n              <span class=\"input-group-btn\">\r\n                <button type='submit' class='btn text-link'>\r\n                  <span class='fa fa-search fa-lg'></span>\r\n                </button>\r\n              </span>\r\n\r\n            </div>\r\n          </form>\r\n        </Col>\r\n        <Col className=\"col col-sm col-md order-1 order-sm-1 order-md-12\">\r\n          <Navbar light expand=\"md\" className=\"float-md-right\">\r\n          <NavbarToggler onClick={this.handleToggle} />\r\n          <Collapse  isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\" mt-2 w-100\" navbar>\r\n                <NavItem className=\"mr-2\">\r\n                  <NavLink to=\"/\" className=\"nav-link \">\r\n                    <span className=\"text-link\">\r\n                      <i className=\" fa fa-home fa-lg mr-1\"></i>\r\n                      <span className=\"d-sm-inline d-md-none d-lg-inline\">Home</span>\r\n                    </span>\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"mr-2\">\r\n                  <NavLink to=\"/covid\" className=\"nav-link\">\r\n                  <span className=\"nav-text ml-1 text-link\">\r\n                    <FontAwesomeIcon icon={faViruses} size=\"lg\" className=\"mr-1\"/>\r\n                    <span className=\" d-sm-inline d-md-none d-lg-inline\">COVID-19</span>\r\n                  </span>\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"mr-2\">\r\n                  <NavLink to=\"/about\" className=\"nav-link\">\r\n                    <span className=\"text-link\">\r\n                      <i className=\"fa fa-users fa-lg mr-1\"></i>\r\n                      <span className=\"d-sm-inline d-md-none d-lg-inline\">About Us</span>\r\n                    </span>\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"mr-2\">\r\n                    <LoginRegisterBtn user={user} isAuthenticated={isAuthenticated} />\r\n                </NavItem>\r\n                <NavItem className=\"mr-2\">\r\n                  { isAuthenticated ? <Logout /> : null }\r\n                </NavItem>\r\n              </Nav>\r\n          </Collapse>\r\n          </Navbar>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Header);\r\n","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart as faHeart1, faPaperPlane } from '@fortawesome/free-solid-svg-icons'\r\nimport { faHeart, faComment } from '@fortawesome/free-regular-svg-icons'\r\nimport { UncontrolledCollapse, Button, CardBody, Card } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\n\r\nclass LikeComment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { \r\n            isClicked: 0,\r\n            id: 0\r\n        }\r\n        this.handleLikeClick = this.handleLikeClick.bind(this);\r\n    }\r\n\r\n\r\n\r\n    handleLikeClick() {\r\n        if(this.state.isClicked == 0) {\r\n            this.setState({isClicked: 1});\r\n        } else {\r\n            this.setState({isClicked: 0});\r\n        }\r\n    }\r\n\r\n    incrementId = () => {\r\n        let currentId = this.state.id;\r\n        currentId += 1;\r\n        this.setState({id : currentId});\r\n        return currentId;\r\n    }\r\n\r\n    toString = (id) => {\r\n        return '#' + id.toString();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <span>\r\n                    <button className=\"btn\" onClick={this.handleLikeClick}><span><FontAwesomeIcon icon={this.state.isClicked == 1 ? faHeart1 : faHeart} size=\"2x\"/></span></button>\r\n                    <button className=\"btn\" id=\"tog\"><span className=\"pl-3\"><FontAwesomeIcon icon={faComment} size=\"2x\" /></span></button>\r\n                </span>\r\n                <UncontrolledCollapse toggler=\"#tog\" className=\"mt-3\">\r\n                    <span>\r\n                        <input type=\"text\" className=\"form-control d-inline w-75\" name=\"comment\" placeholder=\"Leave a comment\"></input>\r\n                        <button type=\"submit\" className=\"btn\"><FontAwesomeIcon icon={faPaperPlane} size=\"lg\" /></button>\r\n                    </span>\r\n                </UncontrolledCollapse>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default LikeComment;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Row, Col, Card, CardBody, CardTitle } from \"reactstrap\";\r\nimport LikeComment from \"./LikeComment\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nclass PostTile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n    };\r\n  }\r\n\r\n  postCreated = (createdAt) => {\r\n    let createdWhen = \"\";\r\n    const created = Date.parse(createdAt);\r\n    let now = Date.now();\r\n    const differenceInMilliSecond = now - created;\r\n    const h = differenceInMilliSecond / 1000 / 60 / 60;\r\n    if (h >= 24) {\r\n      createdWhen = Math.trunc(h / 24) + \"d ago\";\r\n    } else if (h < 1) {\r\n      createdWhen = Math.trunc(h * 60) + \"m ago\";\r\n    } else {\r\n      createdWhen = Math.trunc(h) + \"h ago\";\r\n    }\r\n\r\n    return `Created: ${createdWhen}`;\r\n  };\r\n\r\n  postUpdated = (updatedAt) => {\r\n    let updatedWhen = \"\";\r\n    const created = Date.parse(updatedAt);\r\n    let now = Date.now();\r\n    const differenceInMilliSecond = now - created;\r\n    const h = differenceInMilliSecond / 1000 / 60 / 60;\r\n    if (h >= 24) {\r\n      updatedWhen = Math.trunc(h / 24) + \"d ago\";\r\n    } else if (h < 1) {\r\n      updatedWhen = Math.trunc(h * 60) + \"m ago\";\r\n    } else {\r\n      updatedWhen = Math.trunc(h) + \"h ago\";\r\n    }\r\n\r\n    return `Updated: ${updatedWhen}`;\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/api/posts/getall\").then((res) => {\r\n      const posts = res.data;\r\n      // console.log(posts)\r\n      this.setState({ posts });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.posts.map((post) => (\r\n          <Row key={post._id}>\r\n            <Col className=\"mt-5\">\r\n              <Card className=\"bg-light shadow-sm\">\r\n                <CardTitle className=\"p-3\">\r\n                  <Row>\r\n                    <Col className=\"col-8 col-sm-10\">\r\n                      <p>\r\n                        <strong>{post.owner}</strong>\r\n                      </p>\r\n                    </Col>\r\n                    {/* {console.log(Date.parse(post.createdAt))} */}\r\n                    <Col className=\"col-4 col-sm-2\">\r\n                      <span className=\"float-right\">\r\n                        {this.postCreated(post.createdAt)}\r\n                      </span>\r\n                      <span className=\"float-right\">\r\n                        {this.postUpdated(post.updatedAt)}\r\n                      </span>\r\n                    </Col>\r\n                  </Row>\r\n                </CardTitle>\r\n                <CardBody className=\"pt-0\">\r\n                  <h4>{post.title}</h4>\r\n                  <p>{post.content}</p>\r\n                  <p>34 likes</p>\r\n                  <LikeComment id={post.id} />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostTile;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Header from \"./../components/Header/Header\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport PostTile from \"./../components/PostTile\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport './pages.css'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../actions/authActions\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { isAuthenticated } = this.props;\r\n    console.log(isAuthenticated);\r\n\r\n    const createPostLink = (\r\n      <Fragment>\r\n        <Col className=\"col-12 col-sm-4 mt-5\">\r\n          \r\n          <Link to=\"/createpost\" className=\"float-right\">\r\n            \r\n            <button type=\"button\" id=\"createpostbtn\" className=\"btn rounded\">\r\n              <FontAwesomeIcon icon={faPlusCircle} className=\"createpostbtn\" size=\"3x\" /> \r\n            </button>\r\n            <label for=\"createpostbtn\" className=\"createpostbtn\">Create a post</label>\r\n          </Link>\r\n        </Col>\r\n      </Fragment>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"container\">\r\n          <h1 className=\"text-center mt-3\">General</h1>\r\n          <Row className=\"btn-group-toggle\" data-toggle=\"buttons\">\r\n            <Col className=\"col-4 col-sm-4 d-none d-sm-block mt-5\">\r\n              <Link to=\"/\" className=\"mt-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-menu w-100 rounded btn-aux\"\r\n                >\r\n                  {\" \"}\r\n                  General\r\n                </button>\r\n              </Link>\r\n            </Col>\r\n            <Col className=\"col-4 col-sm-4 d-none d-sm-block mt-5\">\r\n              <Link to=\"/covid\">\r\n                <button type=\"button\" className=\"btn w-100 rounded btn-aux\">\r\n                  {\" \"}\r\n                  COVID-19\r\n                </button>\r\n              </Link>\r\n            </Col>\r\n            {isAuthenticated ? createPostLink : null}\r\n          </Row>\r\n          <PostTile />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  error: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Home);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Row, Col, Card, CardBody, CardTitle } from \"reactstrap\";\r\nimport LikeComment from \"./LikeComment\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nclass PostTileCovid extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      posts: [],\r\n    };\r\n  }\r\n\r\n  postCreated = (createdAt) => {\r\n    let createdWhen = \"\";\r\n    const created = Date.parse(createdAt);\r\n    let now = Date.now();\r\n    const differenceInMilliSecond = now - created;\r\n    const h = differenceInMilliSecond / 1000 / 60 / 60;\r\n    if (h >= 24) {\r\n      createdWhen = Math.trunc(h / 24) + \"d ago\";\r\n    } else if (h < 1) {\r\n      createdWhen = Math.trunc(h * 60) + \"m ago\";\r\n    } else {\r\n      createdWhen = Math.trunc(h) + \"h ago\";\r\n    }\r\n\r\n    return `Created: ${createdWhen}`;\r\n  };\r\n\r\n  postUpdated = (updatedAt) => {\r\n    let updatedWhen = \"\";\r\n    const created = Date.parse(updatedAt);\r\n    let now = Date.now();\r\n    const differenceInMilliSecond = now - created;\r\n    const h = differenceInMilliSecond / 1000 / 60 / 60;\r\n    if (h >= 24) {\r\n      updatedWhen = Math.trunc(h / 24) + \"d ago\";\r\n    } else if (h < 1) {\r\n      updatedWhen = Math.trunc(h * 60) + \"m ago\";\r\n    } else {\r\n      updatedWhen = Math.trunc(h) + \"h ago\";\r\n    }\r\n\r\n    return `Updated: ${updatedWhen}`;\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/api/covid/getall\").then((res) => {\r\n      const posts = res.data;\r\n      // console.log(posts)\r\n      this.setState({ posts });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { posts } = this.state;\r\n    return (\r\n      <div>\r\n        {posts.map((post) => (\r\n          <Row key={post._id}>\r\n            <Col className=\"mt-5\">\r\n              <Card className=\"bg-light shadow-sm\">\r\n                <CardTitle className=\"p-3\">\r\n                  <Row>\r\n                    <Col className=\"col-8 col-sm-10\">\r\n                      <p>\r\n                        <strong>{post.owner}</strong>\r\n                      </p>\r\n                    </Col>\r\n                    <Col className=\"col-4 col-sm-2\">\r\n                      <span className=\"float-right\">\r\n                        {this.postCreated(post.createdAt)}\r\n                      </span>\r\n                      <span className=\"float-right\">\r\n                        {this.postUpdated(post.updatedAt)}\r\n                      </span>\r\n                    </Col>\r\n                  </Row>\r\n                </CardTitle>\r\n                <CardBody className=\"pt-0\">\r\n                  <h4>{post.title}</h4>\r\n                  <p>{post.content}</p>\r\n                  <p>34 Likes</p>\r\n                  <LikeComment className=\"d-inline\" />\r\n                  <button className=\"btn btn-info float-right\">Accept</button>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostTileCovid;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Header from \"../components/Header/Header\";\r\nimport {\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PostTileCovid from \"./../components/PostTileCovid\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport './pages.css'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../actions/authActions\"\r\n\r\nclass Covid extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { isAuthenticated } = this.props;\r\n    console.log(isAuthenticated);\r\n\r\n    const createPostLink = (\r\n      <Fragment>\r\n        <Col className=\"col-4 col-sm-4 d-none d-sm-block mt-5\">\r\n        <Link to=\"/createpost\" className=\"float-right\">\r\n            \r\n            <button type=\"button\" id=\"createpostbtn\" className=\"btn rounded\">\r\n              <FontAwesomeIcon icon={faPlusCircle} className=\"createpostbtn\" size=\"3x\" /> \r\n            </button>\r\n            <label for=\"createpostbtn\" className=\"createpostbtn\">Create a post</label>\r\n          </Link>\r\n        </Col>\r\n      </Fragment>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"container\">\r\n        <h1 className=\"text-center mt-3\">COVID-19</h1>\r\n          <Row>\r\n            <Col className=\"col-4 col-sm-4 d-none d-sm-block mt-5\">\r\n              <Link to=\"/\" className=\"mt-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-menu w-100 rounded btn-aux\"\r\n                >\r\n                  {\" \"}\r\n                  General\r\n                </button>\r\n              </Link>\r\n            </Col>\r\n            <Col className=\"col-4 col-sm-4 d-none d-sm-block mt-5\">\r\n              <Link to=\"/covid\">\r\n                <button type=\"button\" className=\"btn w-100 rounded btn-aux\">\r\n                  {\" \"}\r\n                  COVID-19\r\n                </button>\r\n              </Link>\r\n            </Col>\r\n            { isAuthenticated ? createPostLink : null }\r\n          </Row>\r\n          <PostTileCovid />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCovid.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  error: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Covid);","import React, { Component } from 'react'\r\nimport Header from './../components/Header/Header'\r\nimport { Row, Col, Card, CardBody, CardTitle } from 'reactstrap'\r\n\r\n\r\nclass About extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <h1 class=\"text-center page-header text-uppercase\">About Us</h1>\r\n                <div class=\"mx-auto card w-75\">\r\n                    <div>\r\n                    <h5 class=\"card-header bg-secondary font-weight-bold text-uppercase\">Front-end</h5>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <blockquote class =\"blockquote mb-0\">\r\n                            <p>I Am ........ sjndfisuafh usjfihaushf nfuie difhsdjf cushf \r\n                                sdfbuyewufdh \r\n                                <img src=\"https://via.placeholder.com/150\" class=\"rounded float-right\" alt=\"...\"></img>\r\n\r\n                            </p>\r\n                            <footer class=\"blockquote-footer\">Alireza Kakan</footer>\r\n                        </blockquote>\r\n                        \r\n                    </div>\r\n                    <div>\r\n                    <h5 class=\"card-header bg-secondary font-weight-bold text-uppercase\">Back-end</h5>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <blockquote class =\"blockquote mb-0\">\r\n                            <p class=\"text-center\">\r\n                            <img src=\"https://via.placeholder.com/150\" class=\"rounded float-left\" alt=\"...\"></img>\r\n                                I Am ........ sjndfisuafh usjfihaushf nfuie difhsdjf cushf \r\n                                sdfbuyewufdh \r\n                                <footer class=\"blockquote-footer\">Edgar</footer>\r\n\r\n                            </p>\r\n                        </blockquote>\r\n                        \r\n                    </div>\r\n                    <div>\r\n                    <h5 class=\"card-header bg-secondary font-weight-bold text-uppercase\">Back-end</h5>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <blockquote class =\"blockquote mb-0\">\r\n                            <p>I Am ........ sjndfisuafh usjfihaushf nfuie difhsdjf cushf \r\n                                sdfbuyewufdh\r\n                                <img src=\"https://via.placeholder.com/150\" class=\"rounded float-right\" alt=\"...\"></img>\r\n                                <footer class=\"blockquote-footer\">Tommy</footer>\r\n\r\n                            </p>\r\n                        </blockquote>\r\n                        \r\n                    </div>\r\n                    <div>\r\n                    <h5 class=\"card-header bg-secondary font-weight-bold text-uppercase\">Front-end</h5>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <blockquote class =\"blockquote mb-0\">\r\n                            <p class=\"text-center\">\r\n                            <img src=\"https://via.placeholder.com/150\" class=\"rounded float-left\" alt=\"...\"></img>\r\n                                I Am ........ sjndfisuafh usjfihaushf nfuie difhsdjf cushf \r\n                                sdfbuyewufdh \r\n                                <footer class=\"blockquote-footer text-center\">Sayed Fahad</footer>\r\n                            </p>\r\n                        </blockquote>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react'\r\nimport Header from './../components/Header/Header'\r\nimport { Row, Col } from 'reactstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n \r\n\r\nclass User extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"container\">\r\n                    <h1 className=\"text-center\">Profile</h1>\r\n                    <Row>\r\n                        <Col className=\"col-12 col-sm-6\">\r\n                            <p className=\"text-center mt-3\">First Name</p>\r\n                        </Col>\r\n                        <Col className=\"col-12 col-sm-6\">\r\n                            <p className=\"text-center mt-3\">last Name</p>\r\n                        </Col>\r\n                        <Col className=\"col-12 col-sm-6\">\r\n                            <p className=\"text-center mt-3\">UserName</p>\r\n                        </Col>\r\n                        <Col className=\"col-12 col-sm-6\">\r\n                            <p className=\"text-center mt-3  \">Email@gmail.com</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        \r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default User;","import React, { Component } from \"react\";\r\nimport { Col, Card, CardBody } from \"reactstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\n// Components\r\nimport Header from \"./../components/Header/Header\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createPost } from \"../actions/postActions\";\r\nimport { createCovidPost } from \"../actions/covidActions\";\r\n\r\nclass CreatePost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      content: \"\",\r\n      redirectToHome: false,\r\n      redirectToCovid: false,\r\n      relatedToCovid: false,\r\n      askForHelp: false,\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onChangeCheckBox = (e) => {\r\n    this.setState({ [e.target.name]: e.target.checked})\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { title, content, relatedToCovid, askForHelp } = this.state;\r\n\r\n    if (relatedToCovid) {\r\n      const newCovidPost = {\r\n        title,\r\n        content,\r\n        owner: this.props.user.name,\r\n        ownerId: this.props.user._id,\r\n      };\r\n      console.log(newCovidPost);\r\n      this.props.createCovidPost(newCovidPost);\r\n      this.setState({ redirectToCovid: true })\r\n    } else {\r\n      \r\n      const newPost = {\r\n        title,\r\n        content,\r\n        owner: this.props.user.name,\r\n        ownerId: this.props.user._id,\r\n      };\r\n      console.log(newPost);\r\n      this.props.createPost(newPost);\r\n      // this.props.history.push(\"/\");\r\n      this.setState({ redirectToHome: true });\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (!this.props.isAuthenticated) this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirectToHome) {\r\n      return <Redirect to=\"/\" />;\r\n    };\r\n    if (this.state.redirectToCovid) {\r\n      return <Redirect to=\"/covid\" />\r\n    }\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"container\">\r\n          <Col className=\"col-4 col-sm-4 d-none d-sm-block mt-5\">\r\n            <Link to=\"/\" className=\"mt-4\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-menu w-75 rounded btn-success\"\r\n              >\r\n                Post\r\n              </button>\r\n            </Link>\r\n          </Col>\r\n        </div>\r\n        <Card className=\"bg-info shadow mx-auto w-75\">\r\n          <CardBody className=\"mx-auto w-50\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                id=\"title\"\r\n                onChange={this.onChange}\r\n                placeholder=\"Post title\"\r\n                className=\"form-control  \"\r\n              />\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"content\"\r\n                id=\"content\"\r\n                onChange={this.onChange}\r\n                placeholder=\"Content Body\"\r\n                className=\"form-control  mt-4\"\r\n                rows=\"3\"\r\n              />\r\n              <div className=\"form-check form-check-inline\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"inlineCheckbox1\"\r\n                  name=\"relatedToCovid\"\r\n                  value=\"option1\"\r\n                  onChange={this.onChangeCheckBox}\r\n                />\r\n                <label\r\n                  class=\"form-check-label\"\r\n                  name=\"relatedToCovid\"\r\n                  for=\"inlineCheckbox1\"\r\n                >\r\n                  Related to COVID-19\r\n                </label>\r\n              </div>\r\n              <div class=\"form-check form-check-inline\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"inlineCheckbox2\"\r\n                  value=\"option2\"\r\n                  onChange={this.onChangeCheckBox}\r\n                  name=\"askForHelp\"\r\n                />\r\n                <label\r\n                  class=\"form-check-label\"\r\n                  name=\"askForHelp\"\r\n                  for=\"inlineCheckbox2\"\r\n                >\r\n                  Ask for Help\r\n                </label>\r\n              </div>\r\n              <div>\r\n                <button type=\"submit\" className=\"btn btn-success mt-5\">\r\n                  Send\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreatePost.propTypes = {\r\n  createPost: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createPost, createCovidPost })(CreatePost);\r\n","import axios from \"axios\";\r\nimport * as actions from \"./types\";\r\nimport { tokenConfig } from \"./authActions\";\r\nimport { returnErrors } from \"./errorActions\";\r\n\r\nexport const getAllPosts = () => async (dispatch) => {\r\n  try {\r\n    dispatch(setItemsLoading());\r\n    const response = await axios.get(\"/api/posts/getall\");\r\n    const payload = response.data;\r\n\r\n    dispatch({\r\n      type: actions.GET_ALL_POSTS,\r\n      payload,\r\n    });\r\n  } catch (error) {\r\n    dispatch(returnErrors(error.response.data, error.response.status));\r\n  }\r\n};\r\n\r\nexport const createPost = (newPost) => async (dispatch, getState) => {\r\n  try {\r\n    const response = await axios.post(\r\n      \"/api/posts\",\r\n      newPost,\r\n      tokenConfig(getState)\r\n    );\r\n    const payload = response.data;\r\n    console.log(payload)\r\n\r\n    dispatch({\r\n      type: actions.CREATE_POST,\r\n      payload,\r\n    });\r\n  } catch (error) {\r\n    dispatch(returnErrors(error.response.data, error.response.status));\r\n  }\r\n};\r\n\r\nexport const deletePost = (deleteReq) => async (dispatch, getState) => {\r\n  try {\r\n    const postId = deleteReq.postId\r\n    const response = await axios.delete(\r\n      `/api/posts/`, \r\n      deleteReq,\r\n      tokenConfig(getState)\r\n    );\r\n    console.log(response)\r\n\r\n    dispatch({\r\n      type: actions.DELETE_POST,\r\n      payload: deleteReq.postId,\r\n    });\r\n  } catch (error) {\r\n    dispatch(returnErrors(error.response.data, error.response.status));\r\n  }\r\n};\r\n\r\nexport const setItemsLoading = () => {\r\n  return {\r\n    type: actions.POSTS_LOADING,\r\n  };\r\n};\r\n","import axios from \"axios\";\r\nimport * as actions from \"./types\";\r\nimport { tokenConfig } from \"./authActions\";\r\nimport { returnErrors } from \"./errorActions\";\r\n\r\nexport const createCovidPost = (newPost) => async (dispatch, getState) => {\r\n  try {\r\n    const response = await axios.post(\r\n      \"/api/covid\",\r\n      newPost,\r\n      tokenConfig(getState)\r\n    );\r\n    const payload = response.data;\r\n    console.log(payload)\r\n\r\n    dispatch({\r\n      type: actions.CREATE_C_POST,\r\n      payload,\r\n    });\r\n  } catch (error) {\r\n    dispatch(returnErrors(error.response.data, error.response.status));\r\n  }\r\n};\r\n\r\nexport const deleteCovidPost = (deleteReq) => async (dispatch, getState) => {\r\n  try {\r\n    const postId = deleteReq.postId\r\n    const response = await axios.delete(\r\n      `/api/posts/`, \r\n      deleteReq,\r\n      tokenConfig(getState)\r\n    );\r\n    console.log(response)\r\n\r\n    dispatch({\r\n      type: actions.DELETE_POST,\r\n      payload: deleteReq.postId,\r\n    });\r\n  } catch (error) {\r\n    dispatch(returnErrors(error.response.data, error.response.status));\r\n  }\r\n};\r\n\r\nexport const setItemsLoading = () => {\r\n  return {\r\n    type: actions.POSTS_LOADING,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardBody, CardTitle, Alert } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Header from \"./../components/Header/Header\";\r\nimport logo from \"./../images/logo_transparent.png\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './pages.css'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../actions/authActions\";\r\nimport { clearErrors } from \"../actions/errorActions\"\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if(error.id === \"LOGIN_FAIL\") {\r\n        this.setState({ msg: error.msg.msg })\r\n      } else {\r\n        this.setState({ msg: null })\r\n      }\r\n    }\r\n\r\n    // If authenticated redirect to login page\r\n    if (isAuthenticated) {\r\n      this.props.history.push(\"/\")\r\n    }\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { email, password } = this.state;\r\n    const user = {\r\n      email, password\r\n    };\r\n\r\n    // Attempt to login\r\n    this.props.login(user)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"aux-background\">\r\n        <Header />\r\n        <Card className=\"aux-background shadow\">\r\n          { this.state.msg ? <Alert color=\"danger\">{ this.state.msg }</Alert> : null } \r\n          <CardTitle className=\"text-center p-3\">\r\n            <NavLink to=\"/register\" className=\"d-block pull-right\">\r\n              <button type=\"button\" className=\"btn btn-info\">\r\n                Register\r\n              </button>\r\n            </NavLink>\r\n\r\n            <img\r\n              src={logo}\r\n              className=\"d-block mx-auto  \"\r\n              height=\"150\"\r\n              width=\"150\"\r\n            />\r\n          </CardTitle>\r\n          <CardBody className=\"mx-auto w-50\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"Email\"\r\n                onChange={this.onChange}\r\n                className=\"form-control\"\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"email\"\r\n                placeholder=\"Password\"\r\n                onChange={this.onChange}\r\n                className=\"form-control mt-4\"\r\n              />\r\n              <button type=\"submit\" className=\"btn btn-success mt-4\">\r\n                Login\r\n              </button>\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  error: PropTypes.object.isRequired,\r\n  login: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, clearErrors })(Login);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardBody, CardTitle, Alert } from \"reactstrap\";\r\nimport Header from \"./../components/Header/Header\";\r\nimport logo from \"./../images/logo_transparent.png\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../actions/authActions\";\r\nimport { clearErrors } from \"../actions/errorActions\";\r\nimport PropTypes from \"prop-types\";\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      msg: null,\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.clearErrors();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === \"REGISTER_FAIL\") {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n\r\n    // If authenticated redirect to login page\r\n    if (this.props.isAuthenticated) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      email,\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      password,\r\n      confirmPassword,\r\n    } = this.state;\r\n\r\n    // Create user object\r\n    const newUser = {\r\n      email,\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      password,\r\n      confirmPassword,\r\n    };\r\n\r\n    // Attempt to register\r\n    this.props.register(newUser);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Card className=\"bg-dark shadow\">\r\n          {this.state.msg ? (\r\n            <Alert color=\"danger\">{this.state.msg}</Alert>\r\n          ) : null}\r\n          <CardTitle className=\"text-center p-3\">\r\n            <img\r\n              src={logo}\r\n              className=\"d-block mx-auto  \"\r\n              height=\"150\"\r\n              width=\"150\"\r\n            />\r\n          </CardTitle>\r\n          <CardBody className=\"mx-auto w-50\">\r\n            <form onSubmit={this.onSubmit}>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"Email\"\r\n                className=\"form-control\"\r\n                onChange={this.onChange}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                id=\"firstName\"\r\n                placeholder=\"First name\"\r\n                className=\"form-control mt-4\"\r\n                onChange={this.onChange}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                id=\"lastName\"\r\n                placeholder=\"Last name\"\r\n                className=\"form-control mt-4\"\r\n                onChange={this.onChange}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                id=\"username\"\r\n                placeholder=\"Username\"\r\n                className=\"form-control mt-4\"\r\n                onChange={this.onChange}\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n                className=\"form-control mt-4\"\r\n                onChange={this.onChange}\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                id=\"confirmPassword\"\r\n                placeholder=\"Confirm Password\"\r\n                className=\"form-control mt-4\"\r\n                onChange={this.onChange}\r\n              />\r\n              <button type=\"submit\" className=\"btn btn-success mt-4\">\r\n                Register\r\n              </button>\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  error: PropTypes.object.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { register, clearErrors })(Register);\r\n","import * as actions from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: []\r\n}\r\n\r\nexport default function postReducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case actions.GET_ALL_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload\r\n      }\r\n      case actions.DELETE_POST:\r\n        return {\r\n          ...state,\r\n          posts: state.posts.filter(post => post.id !== action.payload)\r\n        }\r\n      default:\r\n        return state\r\n  }\r\n};","import * as actions from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n  id: null\r\n};\r\n\r\nexport default function errorReducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case actions.GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        stats: action.payload.status,\r\n        id: action.payload.id\r\n      };\r\n    case actions.CLEAR_ERRORS:\r\n      return {\r\n        msg: {},\r\n        status: null,\r\n        id: null\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}","import * as actions from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  isLoading: false,\r\n  user: null\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case actions.USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      }\r\n    case actions.USER_LOADED:\r\n      return{\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload\r\n      };\r\n    case actions.LOGIN_SUCCESS:\r\n    case actions.REGISTER_SUCCESS:\r\n      localStorage.setItem(\"token\", action.payload.token)\r\n      return{\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n    case actions.AUTH_ERROR:\r\n    case actions.LOGIN_FAIL:\r\n    case actions.LOGOUT_SUCCESS:\r\n    case actions.REGISTER_FAIL:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import * as actions from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  covidPosts: []\r\n}\r\n\r\nexport default function covidPostsReducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case actions.GET_ALL_C_POSTS:\r\n      return {\r\n        ...state,\r\n        covidPosts: action.payload\r\n      }\r\n      case actions.DELETE_C_POST:\r\n        return {\r\n          ...state,\r\n          covidPosts: state.covidPosts.filter(covidPost => covidPost.id !== action.payload)\r\n        }\r\n      default:\r\n        return state\r\n  }\r\n};","import { combineReducers } from \"redux\";\r\nimport postReducer from \"./postReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport covidPostsReducer from \"./covidReducer\";\r\n\r\nexport default combineReducers({\r\n  post: postReducer,\r\n  error: errorReducer,\r\n  auth: authReducer,\r\n  covidPosts: covidPostsReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(\r\n  applyMiddleware(...middleware),\r\n  // Code below will cause other chrome browsers to crash if Redux extension is not installed\r\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport Home from \"./pages/Home\";\r\nimport Covid from \"./pages/Covid\";\r\nimport About from \"./pages/About\";\r\nimport User from \"./pages/User\";\r\nimport CreatePost from \"./pages/CreatePost\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport { BrowserRouter, Switch, Route, NavLink } from \"react-router-dom\";\r\nimport './pages/pages.css'\r\n\r\n// Redux\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { loadUser } from \"./actions/authActions\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    store.dispatch(loadUser());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div className=\"mh-100\">\r\n            <Switch>\r\n              <Route path=\"/\" component={Home} exact />\r\n              <Route path=\"/covid\" component={Covid} exact />\r\n              <Route path=\"/login\" component={Login} exact />\r\n              <Route path=\"/about\" component={About} />\r\n              <Route path=\"/user\" component={User} />\r\n              <Route path=\"/register\" component={Register} exact />\r\n              <Route path=\"/createpost\" component={CreatePost} />\r\n            </Switch>\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo_transparent.40f99bd0.png\";"],"sourceRoot":""}